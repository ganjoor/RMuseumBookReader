@page "{book?}"
@model IndexModel


<script>

    var br = null;

    //
    // This file shows the minimum you need to provide to BookReader to display a book
    //
    // Copyright(c)2008-2009 Internet Archive. Software license AGPL version 3.

    // Create the BookReader object
    function instantiateBookReader(selector, extraOptions) {
        selector = selector || '#BookReader';
        extraOptions = extraOptions || {};
        var options = {
            data: @Html.Raw(Model.BookDataArray),

            // Book title and the URL used for the book title link
            bookTitle: '@Html.Raw(Model.BookName)',
            bookUrl: '@Html.Raw(Model.BookUrl)',
            bookUrlText: 'برگشت به این تصویر از @Html.Raw(Model.BookName) در گنجینهٔ گنجور',
            bookUrlTitle: 'برای مشاهدهٔ تصاویر با کیفیت اصلی و ثبت یادداشتهای شخصی و عمومی و ... به گنجینهٔ گنجور مراجعه کنید.',
            pageProgression: 'rl',
            // thumbnail is optional, but it is used in the info dialog
            thumbnail: '@Html.Raw(Model.BookThumbnail)',
            // Metadata is optional, but it is used in the info dialog
            metadata: [
                { label: 'نرم‌افزار کتابخوان', value: '<a href="https://openlibrary.org/dev/docs/bookreader">Internet Archive BookReader</a>' },
                { label: 'عنوان کتاب', value: '@Html.Raw(Model.BookName)' },
                { label: 'توضیحات', value: '@Html.Raw(Model.BookDescription)' },
            ],

            // Override the path used to find UI images
            imagesBaseURL: './BookReader/images/',

            ui: 'full', // embed, full (responsive)

            el: selector,
        };
        Object.assign(options, extraOptions);
        br = new BookReader(options);
        br.init();
    }

    function locationHashChanged() {
        if(br.options.bookUrl == 'https://museum.ganjoor.net/items/ai'){
            $('a.BRreturn').attr('href', '@Model.BookUrl/p' + (br.currentIndex() + 1).toString().padStart(8, '0'));
        }
        else{
            $('a.BRreturn').attr('href', '@Model.BookUrl/p' + (br.currentIndex() + 1).toString().padStart(4, '0'));
        }
    }

    window.onhashchange = locationHashChanged;


</script>

<div id="BookReader"></div>

<script>
    if (window.matchMedia('screen and (max-width: 768px)').matches) {
        instantiateBookReader('#BookReader', { defaults: 'mode/1up' })
    }
    else{
        instantiateBookReader('#BookReader')
    }
</script>
